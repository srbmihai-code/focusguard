import { StyleSheet, Text, View, Button, Alert } from 'react-native';
import { router } from 'expo-router';
import React from 'react';
import AsyncStorage from '@react-native-async-storage/async-storage';
import { checkForPermission, showUsageAccessSettings} from '@brighthustle/react-native-usage-stats-manager';

const Hello = () => {
  async function setHelloPageStatus() {
    try {
      const hasPermission = await checkForPermission();
      if (!hasPermission) {
        Alert.alert(
          'Permisiune necesarÄƒ',
          'FocusGuard are nevoie de permisiunea de utilizare pentru a funcÈ›iona corect.',
          [
            { text: 'AnuleazÄƒ', style: 'cancel' },
            { text: 'Deschide setÄƒrile', onPress: () => showUsageAccessSettings('') },
          ]
        );
        return;
      }

      await AsyncStorage.setItem('hasSeenHelloPage', 'true');
      router.replace('/');
    } catch (error) {
      console.error('Error during permission check or AsyncStorage:', error);
    }
  }

  return (
    <View style={styles.container}>
      <Text style={styles.title}>Bun venit la FocusGuard! ğŸš€</Text>
      <Text style={styles.description}>
        EÈ™ti gata sÄƒ preiei controlul asupra timpului tÄƒu?
        Cu FocusGuard, Ã®È›i poÈ›i organiza eficient programul È™i bloca aplicaÈ›iile care Ã®È›i distrag atenÈ›ia, astfel Ã®ncÃ¢t sÄƒ rÄƒmÃ¢i concentrat pe ceea ce conteazÄƒ cu adevÄƒrat.
      </Text>
      <Button title="Am Ã®nÈ›eles" onPress={setHelloPageStatus} />
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    padding: 20,
    alignItems: 'center',
    justifyContent: 'center',
  },
  title: {
    fontSize: 20,
    fontWeight: 'bold',
    marginBottom: 10,
  },
  description: {
    fontSize: 16,
    textAlign: 'center',
    marginBottom: 20,
  },
});

export default Hello;
